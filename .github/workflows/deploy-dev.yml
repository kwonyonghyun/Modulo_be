name: Deploy to Development Server

on:
  push:
    branches: [ "dev" ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Build with Gradle
        run: ./gradlew build

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            kwonyonghyun/modulo:dev-latest
            kwonyonghyun/modulo:dev-${{ github.sha }}

      - name: Create .env.dev file
        run: |
          echo "IMAGE_TAG=dev-${{ github.sha }}" > .env.dev
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.dev
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env.dev
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env.dev
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> .env.dev
          echo "AWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }}" >> .env.dev
          echo "AWS_S3_BUCKET=${{ secrets.AWS_S3_BUCKET }}" >> .env.dev
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> .env.dev
          echo "SWAGGER_USERNAME=${{ secrets.SWAGGER_USERNAME }}" >> .env.dev
          echo "SWAGGER_PASSWORD=${{ secrets.SWAGGER_PASSWORD }}" >> .env.dev
          echo "CORS_ALLOWED_ORIGINS=${{ secrets.DEV_CORS_ALLOWED_ORIGINS }}" >> .env.dev

      - name: Deploy to Personal Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          source: ".env.dev,docker-compose.dev.yml"
          target: "${{ secrets.SERVER_TARGET_PATH }}"
          strip_components: 0

      - name: Execute deployment commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            cd ${{ secrets.SERVER_TARGET_PATH }}
            docker-compose -f docker-compose.dev.yml --env-file .env.dev down || true
            docker-compose -f docker-compose.dev.yml --env-file .env.dev pull
            docker-compose -f docker-compose.dev.yml --env-file .env.dev up -d
            docker system prune -af